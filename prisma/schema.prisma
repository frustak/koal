generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Todo {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String    @db.VarChar(150)
  description String?   @db.VarChar(300)
  isDone      DateTime?
  goalId      String

  Goal Goal @relation(fields: [goalId], references: [id])
}

model Goal {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String     @db.VarChar(150)
  ownerId   String
  User      User       @relation(fields: [ownerId], references: [id])
  Todo      Todo[]
  DayFocus  DayFocus[]
}

model DayFocus {
  // What is important for the day?
  id             String    @id @default(cuid())
  date           DateTime  @default(now())
  ownerId        String
  goalId         String
  focusTimeStart DateTime
  focusTimeEnd   DateTime

  User User @relation(fields: [ownerId], references: [id])
  Goal Goal @relation(fields: [goalId], references: [id])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.VarChar(191)
  access_token      String? @db.VarChar(191)
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.VarChar(191)
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  goals         Goal[]
  DayFocus      DayFocus[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
